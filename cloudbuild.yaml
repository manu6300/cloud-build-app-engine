steps:
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args: ['-c', 'gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy']
timeout: '1600s'
     
 
# steps:
# # build the docker images and store in container registry in github.com folder
# - name: 'gcr.io/cloud-builders/docker' # it is inbuilt images and below tasks run on this images/instance
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/myapp:latest', '-t', 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA', '-t', 'gcr.io/$PROJECT_ID/myapp:$BUILD_ID', '.' ]
#   id: 'build-myapp-image'
#   waitFor: ['-']  # not depend on the any task

# # push the images to container registry
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA']
#   id: 'push-image-to-container-registry'
#   waitFor: ['build-myapp-image']  # depends on this task

# # images deploy to cloud run
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: gcloud
#   # args attribute can be used in list also
#   # args: ['run', 'deploy', 'myawesomeapp', '--image', 'gcr.io',---]
#   args:
#     - 'run'
#     - 'deploy'
#     - 'myawesomeapp'
#     - '--image'
#     - 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA'
#     - '--region'
#     - 'us-central1'
#     - '--allow-unauthenticated'
#   waitFor: ['push-image-to-container-registry']
#   id: 'deploy-to-cloud-run' 

# # make tar file i.e archive with app, requirements.txt
# - name: 'bash'
#   args: ['tar', '-czvf', 'artifacts.tar.gz', 'app', 'requirements.txt']
#   waitFor: ['deploy-to-cloud-run']
#   id: 'create-artifacts-zip'

# images:
#  - 'gcr.io/$PROJECT_ID/myapp:latest'
#  - 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA'
#  - 'gcr.io/$PROJECT_ID/myapp:$BUILD_ID'

# artifacts:
#   objects:
#     location: 'gs://my-cloud-build-bucket/$BUILD_ID'
#     paths: ['artifacts.tar.gz']




